= form.select :league_id, options_from_collection_for_select(League.all, :id, :name)

:ruby
  config = field.associated_model_config
  related_id = params[:associations] && params[:associations][field.name.to_s]
  source_abstract_model = RailsAdmin.config(form.object.class).abstract_model

  if form.object.new_record? && related_id.present? && related_id != 'new'
    selected = config.abstract_model.get(related_id)
    selected_id = selected.send(field.associated_primary_key)
    selected_name = selected.send(field.associated_object_label_method)
  else
    selected_id = field.selected_id
    selected_name = field.formatted_value
  end

  collection = [[selected_name, selected_id]]

  #js_data = {
  #  xhr: true,
  #  remote_source: index_path(config.abstract_model.to_param, source_object_id: form.object.id, source_abstract_model: source_abstract_model.to_param, associated_collection: field.name, current_action: current_action, compact: true)
  #}
  js_data = {
    xhr: true,
    remote_source: main_app.leagues_path(format: :json)
  }

-# selected_id = (hdv = field.form_default_value).nil? ? selected_id : hdv
=# form.select field.method_name, collection, { selected: selected_id, include_blank: true }, field.html_attributes.reverse_merge({ data: { filteringselect: true, options: js_data.to_json }, placeholder: t('admin.misc.search') })

:javascript
  // [{
  //   "id": "3",
  //   "label": "American Basketball Association"
  // }, {
  //   "id": "2",
  //   "label": "NBA Development League"
  // }, {
  //   "id": "1",
  //   "label": "National Basketball Association"
  // }]
